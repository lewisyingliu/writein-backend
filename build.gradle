plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.10'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.6'
//    implementation 'io.jsonwebtoken:jjwt:0.12.3'
    dependencies {
        // JJWT API for creating and consuming JWTs
        implementation 'io.jsonwebtoken:jjwt-api:0.12.5' // Use the latest stable version

        // JJWT implementation for internal logic
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5' // Use the latest stable version

        // JJWT extension for Jackson JSON processing
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5' // Use the latest stable version
        // If you prefer Gson, use:
        // runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.12.5'
    }
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'com.github.librepdf:openpdf:1.3.30'
//    implementation platform("org.springframework.boot:spring-boot-dependencies:1.1.7")
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok' // For test scope
    testAnnotationProcessor 'org.projectlombok:lombok' // For test scope
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}